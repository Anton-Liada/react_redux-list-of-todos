{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/NoTodosMessege/NoTodosMessege.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","text","value","defaultState","query","status","ALL","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","NoTodosMessege","className","TodoItem","id","title","completed","dispatch","currentTodoId","classNames","onClick","todoActions","TodoList","visibleTodos","useMemo","ACTIVE","COMPLETED","toLowerCase","includes","length","map","TodoFilter","handleStatusChange","useCallback","filterActions","handleQueryChange","onSubmit","event","preventDefault","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoaded","setIsLoaded","useEffect","data","a","userId","visibleUser","Error","href","email","name","App","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.658e4d23.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return { ...state, ...action.payload };\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype QueryAction = {\n  type: 'filter/QUERY';\n  payload: string;\n};\n\ntype StatusAction = {\n  type: 'filter/STATUS';\n  payload: Status;\n};\n\nconst query = (text: string): QueryAction => (\n  { type: 'filter/QUERY', payload: text });\n\nconst status = (value: Status): StatusAction => (\n  { type: 'filter/STATUS', payload: value });\n\nexport const actions = { query, status };\n\ntype State = {\n  query: string;\n  status: Status;\n};\n\nconst defaultState: State = {\n  query: '',\n  status: Status.ALL,\n};\n\ntype Action = QueryAction | StatusAction;\n\nconst filterReducer = (state = defaultState, action: Action): State => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodosAction = {\n  type: 'todos/ADD';\n  payload: Todo[];\n};\n\nconst addTodos = (todos: Todo[]): AddTodosAction => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\nexport const actions = { addTodos };\n\ntype Action = AddTodosAction;\n\nconst defaultState: { todos: Todo[] } = {\n  todos: [],\n};\n\nconst todosReducer = (state = defaultState, action: Action) => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return { ...state, todos: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const NoTodosMessege = () => {\n  return (\n    <p className=\"notification is-warning\">\n      There are no todos matching current filter criteria\n    </p>\n  );\n};\n","import classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, title, completed } = todo;\n  const dispatch = useAppDispatch();\n  const currentTodoId = useAppSelector(state => state.currentTodo?.id);\n\n  return (\n    <tr data-cy=\"todo\" key={id}>\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span\n            className=\"icon\"\n            data-cy=\"iconCompleted\"\n          >\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames(\n          {\n            'has-text-success': completed,\n            'has-text-danger': !completed,\n          },\n        )}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch(todoActions.setTodo(todo))}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far',\n              {\n                'fa-eye': (currentTodoId !== id),\n                'fa-eye-slash': (currentTodoId === id),\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import { useMemo } from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { Status } from '../../types/Status';\nimport { NoTodosMessege } from '../NoTodosMessege';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos.todos);\n  const status = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n\n  const visibleTodos = useMemo(() => {\n    const filteredTodos = todos.filter(todo => {\n      switch (status) {\n        case Status.ACTIVE:\n          return !todo.completed;\n\n        case Status.COMPLETED:\n          return todo.completed;\n\n        case Status.ALL:\n        default:\n          return todo;\n      }\n    }).filter(({ title }) => (\n      title.toLowerCase().includes(query.toLowerCase())\n    ));\n\n    return filteredTodos;\n  }, [status, todos, query]);\n\n  return (\n    <>\n      {(!visibleTodos.length && query) && <NoTodosMessege />}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visibleTodos.map((todo) => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n            />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const status = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n  const dispatch = useAppDispatch();\n\n  const handleStatusChange = useCallback((value: string) => {\n    switch (value) {\n      case Status.ACTIVE:\n        return dispatch(filterActions.status(Status.ACTIVE));\n\n      case Status.COMPLETED:\n        return dispatch(filterActions.status(Status.COMPLETED));\n\n      case Status.ALL:\n      default:\n        return dispatch(filterActions.status(Status.ALL));\n    }\n  }, []);\n\n  const handleQueryChange = useCallback((value: string) => {\n    dispatch(filterActions.query(value));\n  }, []);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={event => (handleStatusChange(event.target.value))}\n          >\n            <option value={Status.ALL}>\n              All\n            </option>\n\n            <option value={Status.ACTIVE}>\n              Active\n            </option>\n\n            <option value={Status.COMPLETED}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => handleQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"button\"\n              onClick={() => handleQueryChange('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = 'https://mate-academy.github.io'\n  + '/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL + url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Loader } from '../Loader';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    setIsLoaded(true);\n\n    const data = async () => {\n      try {\n        if (!currentTodo) {\n          return;\n        }\n\n        const visibleUser = await getUser(currentTodo.userId);\n\n        setUser(visibleUser);\n      } catch (error) {\n        throw new Error('error');\n      } finally {\n        setIsLoaded(false);\n      }\n    };\n\n    data();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoaded && <Loader />}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"button\"\n              onClick={() => dispatch(todoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    setIsLoaded(true);\n\n    const data = async () => {\n      try {\n        const visibleTodos = await getTodos();\n\n        dispatch(todosActions.addTodos(visibleTodos));\n      } catch (error) {\n        throw new Error('error');\n      } finally {\n        setIsLoaded(false);\n      }\n    };\n\n    data();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded && <Loader />}\n              {!isLoaded && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}