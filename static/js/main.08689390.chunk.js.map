{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/NoTodosMessege/NoTodosMessege.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["Status","currentTodoReducer","state","action","type","payload","actions","text","value","defaultState","query","status","ALL","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","NoTodosMessege","className","TodoItem","todo","id","title","completed","classNames","onClick","itemId","find","item","TodoList","toLowerCase","visibleTodos","useMemo","ACTIVE","COMPLETED","includes","length","map","TodoFilter","dispatch","handleStatusChange","useCallback","filterActions","handleQueryChange","onSubmit","event","preventDefault","onChange","target","placeholder","style","pointerEvents","Loader","TodoModal","href","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","isOpen","isLoading","useEffect","data","a","todosActions","Error","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08689390.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype QueryAction = {\n  type: 'filter/QUERY';\n  payload: string;\n};\n\ntype StatusAction = {\n  type: 'filter/STATUS';\n  payload: Status;\n};\n\nconst query = (text: string): QueryAction => (\n  { type: 'filter/QUERY', payload: text });\n\nconst status = (value: Status): StatusAction => (\n  { type: 'filter/STATUS', payload: value });\n\nexport const actions = { query, status };\n\ntype State = {\n  query: string;\n  status: Status;\n};\n\nconst defaultState: State = {\n  query: '',\n  status: Status.ALL,\n};\n\ntype Action = QueryAction | StatusAction;\n\nconst filterReducer = (state = defaultState, action: Action): State => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodosAction = {\n  type: 'todos/ADD';\n  payload: Todo[];\n};\n\nconst addTodos = (todos: Todo[]): AddTodosAction => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\nexport const actions = { addTodos };\n\ntype Action = AddTodosAction;\n\nconst defaultState: { todos: Todo[] } = {\n  todos: [],\n};\n\nconst todosReducer = (state = defaultState, action: Action) => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return { ...state, todos: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const NoTodosMessege = () => {\n  return (\n    <p className=\"notification is-warning\">\n      There are no todos matching current filter criteria\n    </p>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  todos: Todo[];\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo, todos }) => {\n  const { id, title, completed } = todo;\n  const findedTodo = (itemId: number) => todos.find(item => (\n    item.id === itemId));\n\n  return (\n    <tr data-cy=\"todo\" key={id}>\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\"> </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames(\n          {\n            'has-text-success': completed,\n            'has-text-danger': !completed,\n          },\n        )}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => findedTodo(id)}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', 'fa-eye')} />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import { useMemo } from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { Status } from '../../types/Status';\nimport { NoTodosMessege } from '../NoTodosMessege';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos.todos);\n  const status = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query).toLowerCase();\n\n  const visibleTodos = useMemo(() => {\n    const filteredTodos = todos.filter(todo => {\n      switch (status) {\n        case Status.ACTIVE:\n          return !todo.completed;\n\n        case Status.COMPLETED:\n          return todo.completed;\n\n        case Status.ALL:\n        default:\n          return todo;\n      }\n    }).filter(todo => todo.title.includes(query));\n\n    return filteredTodos;\n  }, [status, todos, query]);\n\n  return (\n    <>\n      {(!visibleTodos.length && query) && <NoTodosMessege />}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visibleTodos.map((todo) => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              todos={visibleTodos}\n            />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const status = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n  const dispatch = useAppDispatch();\n\n  const handleStatusChange = useCallback((value: string) => {\n    switch (value) {\n      case Status.ACTIVE:\n        return dispatch(filterActions.status(Status.ACTIVE));\n\n      case Status.COMPLETED:\n        return dispatch(filterActions.status(Status.COMPLETED));\n\n      case Status.ALL:\n      default:\n        return dispatch(filterActions.status(Status.ALL));\n    }\n  }, []);\n\n  const handleQueryChange = useCallback((value: string) => {\n    dispatch(filterActions.query(value));\n  }, []);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={event => (handleStatusChange(event.target.value))}\n          >\n            <option value={Status.ALL}>\n              All\n            </option>\n\n            <option value={Status.ACTIVE}>\n              Active\n            </option>\n\n            <option value={Status.COMPLETED}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => handleQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"button\"\n              onClick={() => handleQueryChange('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      <Loader />\n\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            Todo #3\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button type=\"button\" className=\"delete\" data-cy=\"modal-close\" />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">fugiat veniam minus</p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {/* For not completed */}\n            <strong className=\"has-text-danger\">Planned</strong>\n\n            {/* For completed */}\n            <strong className=\"has-text-success\">Done</strong>\n            {' by '}\n            <a href=\"mailto:Sincere@april.biz\">Leanne Graham</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = 'https://mate-academy.github.io'\n  + '/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL + url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [isOpen] = useState(false);\n  const [isLoading] = useState(false);\n\n  useEffect(() => {\n    const data = async () => {\n      try {\n        const visibleTodos = await getTodos();\n\n        dispatch(todosActions.addTodos(visibleTodos));\n      } catch (error) {\n        throw new Error('error');\n      }\n    };\n\n    data();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isOpen && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}